[
["script.html", "Ch 7 其他程式碼 7.1 參考資料", " Ch 7 其他程式碼 撰寫中 7.1 參考資料 Learn Shiny Use R scripts and data "],
["design.html", "Ch 8 客製化使用者介面 8.1 8.2 HTML 101 8.3 R -&gt; HTML 8.4 HTML UI 8.5 CSS 8.6 Bootstrap 8.7 Sass 8.8 參考資料", " Ch 8 客製化使用者介面 撰寫中 ## 樣式模板 shinythemes(Chang 2018) 8.1 shinydashboard(Chang and Borges Ribeiro 2018) shinymaterial Rinterface 8.2 HTML 101 8.3 R -&gt; HTML tags A list of functions tags$h1() tags$h2() tags$a(href=&quot;~&quot;,&quot;book&quot;) &lt;a href=&quot;~&quot;&gt;&quot;book&quot;&lt;/a&gt; www folder 8.4 HTML UI library(shinydashboard) dashboardPage( ) 8.5 CSS code cademy css leasson CSS教材 在Shiny App使用CSS 1. 使用css file (放在專案資料夾中的www資料夾) 2. 在header中直接撰寫css 3. 在每個tag中分別撰寫css Tag -&gt; Class -&gt; id fluidPage( theme = &quot;xxx.css&quot; ) fluidPage( tags$head( rel=&quot;stylesheet&quot;, xx, xx ) ) fluidPage( includeCSS(&quot;xxx.css&quot;) #只要放在專案資料夾就好，不用放在www資料夾中 ) 8.6 Bootstrap CSS framework 8.7 Sass sass bootstraplib 8.8 參考資料 How to Start Shiny tutorial Styling Shiny apps with Sass and Bootstrap 4 - Joe Cheng References "],
["test.html", "Ch 9 介面與效能測試 9.1 效能測試 9.2 參考資料", " Ch 9 介面與效能測試 撰寫中 ## 介面測試 shinytest library(devtools) install_github(&quot;rstudio/shinytest&quot;) shinytest::installDependencies() library(shinytest) # Launch the target app (replace with the correct path) recordTest(&quot;path/to/app&quot;) 9.1 效能測試 Shiny App的效能測試通常是基準測試 Benchmark、效能分析 Analyze、建議解決方案 Recommend、程式最佳化 Optimize四個步驟的循環 ( 參考資料 ): 基準測試 Benchmark: 以一般使用者的使用方式測試系統，如果感覺不夠快，就進到下一步。若想測試多人同時使用的情境，可使用shinyloadtest套件(Dipert, Schloerke, and Borges 2020)進行測試 效能分析 Analyze: 利用工具 (如profvis (Chang, Luraschi, and Mastny 2019))計算每一步所花時間，找到最花時間的步驟，可能是讀檔、計算、網路連線等 建議解決方案 Recommend: 針對最花時間的步驟，研擬解決的辦法，包括限制使用者的行為或是最佳化 (Optimize)程式 程式最佳化 Optimize: 需要的資料不要每次啟動應用程式都重新下載並處理，可先完成，若資料很大，建議先做預處理，不要在Shiny App中讀取大檔案 注意dplyr::group_by()的使用順序，盡量在filter之後 若需讀格式單純的檔案，csv比rds快 若Shiny App中有一些圖是使用者會重複得到的輸出結果，可考慮用plotCache()存快取 因放在server中的程式碼是每個session都會執行一次， 完成測試後，就能將Shiny App正式部屬(Deploy)上線。 9.1.1 基準測試 Benchmark run app record playback analyze 要開兩個R session，第一個session跑Shiny App，第二個session跑shinyloadtest 9.1.2 效能分析 Analyze profiling 花時間的程式碼，如讀檔，grouping，aggregation等，可以在Shiny App執行前就將檔案準備好，例如把可以先跑的程式碼寫在獨立的R Script中，用排程的方式已固定的頻率重新執行，以更新資料 9.1.3 程式最佳化 Optimize plot caching 畫圖很慢 有一些圖是蠻多使用者在使用Shiny App的時候會得到的輸出結果 renderCachedPlot({ },cacheKeyExpr = { }) renderPlot() shinyloadtest profvis Async shinyloadtest -&gt; profvis -&gt; Optimize -&gt; Deploy shinyloadtest 9.2 參考資料 Getting started with shinytest Shiny in Production Make Shiny Fast References "],
["js.html", "Ch 12 客製化使用者介面", " Ch 12 客製化使用者介面 撰寫中 ## D3.js ## JavaScript "]
]
